export namespace managePets {
    namespace model {
        namespace instance {
            namespace state {
                const pets: any[];
            }
        }
        const rules: {
            "#/state/pets/*/name": {
                value: (context: any) => any;
            }[];
            "#/state/pets/*/image/*": {
                set: string;
                value: (context: any) => void;
            }[];
            "#/state/add": {
                set: string;
                value: (context: any) => any;
            }[];
            "#/state/type": {
                set: string;
                value: (context: any) => void;
            }[];
        };
    }
    const pages: {
        label: string;
        fields: ({
            type: string;
            layout: string;
            align: string;
            fields: ({
                type: string;
                label: string;
                bind: string;
                placeholder: string;
            } | {
                type: string;
                label: string;
                bind: string;
                placeholder?: undefined;
            })[];
            items?: undefined;
        } | {
            type: string;
            layout: string;
            items: string;
            fields: {
                type: string;
                layout: string;
                ui: string;
                fields: ({
                    type: string;
                    layout: string;
                    fields: ({
                        type: string;
                        style: string;
                        label: string;
                        bind: string;
                        autocomplete?: undefined;
                    } | {
                        type: string;
                        label: string;
                        bind: string;
                        autocomplete: {
                            items: string[];
                        };
                        style?: undefined;
                    } | {
                        type: string;
                        label: string;
                        bind: string;
                        autocomplete: {
                            items: (options: any, e: any) => any;
                        };
                        style?: undefined;
                    } | {
                        type: string;
                        label: string;
                        bind: string;
                        style?: undefined;
                        autocomplete?: undefined;
                    })[];
                    label?: undefined;
                    bind?: undefined;
                    height?: undefined;
                    max?: undefined;
                    types?: undefined;
                    limit?: undefined;
                    click?: undefined;
                } | {
                    type: string;
                    label: string;
                    bind: string;
                    height: string;
                    max: number;
                    types: string[];
                    limit: number;
                    layout?: undefined;
                    fields?: undefined;
                    click?: undefined;
                } | {
                    type: string;
                    label: string;
                    click: (e: any) => void;
                    layout?: undefined;
                    fields?: undefined;
                    bind?: undefined;
                    height?: undefined;
                    max?: undefined;
                    types?: undefined;
                    limit?: undefined;
                })[];
            }[];
            align?: undefined;
        })[];
    }[];
}
